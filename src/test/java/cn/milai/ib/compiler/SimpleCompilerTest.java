package cn.milai.ib.compiler;

import static org.junit.Assert.assertArrayEquals;

import java.io.IOException;

import org.junit.Test;

public class SimpleCompilerTest {

	private final byte[] testSimpleCompilerTxt = {
			// (length) IFNTBT
			0x0, 0x6, 0x49, 0x46, 0x4e, 0x54, 0x42, 0x54,
			// majorVersion, minorVersion
			0x0, 0x1, 0x0, 0x0,
			// ConstantPool Size = 6
			0x0, 0x6,
			// [1]UTF8(4) cn.milai.ib.obj.character.plane.WelcomePlane
			0x4, 0x0, 0x2c, 0x63, 0x6e, 0x2e, 0x6d, 0x69, 0x6c, 0x61, 0x69, 0x2e, 0x69, 0x62, 0x2e, 0x6f, 0x62, 0x6a, 0x2e, 0x63, 0x68, 0x61, 0x72,
			0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x57, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x6e,
			0x65,
			// [2] Float(3) 0.5
			0x3, 0x3f, 0x0, 0x0, 0x0,
			// [3] Float(3) -0.2
			0x3, -0x42, 0x4c, -0x34, -0x33,
			// [4] Float(3) 0.4
			0x3, 0x3e, -0x34, -0x34, -0x33,
			// [5] Float(3) 0
			0x3, 0x0, 0x0, 0x0, 0x0,
			// [6] Long(2) 10
			0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa,
			// new(1) cn.milai.ib.obj.character.plane.WelcomePlane(1) 0.5(2) -0.2(3)
			0x1, 0x0, 0x1, 0x0, 0x2, -0x0, 0x3,
			// new(1) cn.milai.ib.obj.character.plane.WelcomePlane(1) 0.4(4) 0(5)
			0x1, 0x0, 0x1, 0x0, 0x4, 0x0, 0x5,
			// sleep 10(6)
			0x2, 0x0, 0x6,

	};

	@Test
	public void testCompiler() throws IOException {
		byte[] bytes = SimpleCompiler.compile(SimpleCompilerTest.class.getResource("/testSimpleCompiler.txt").openStream());
		assertArrayEquals(testSimpleCompilerTxt, bytes);
	}
	
	@Test
	public void testShowDialog() throws IOException {
		SimpleCompiler.compile(SimpleCompilerTest.class.getResource("/testDialog.txt").openStream());
	}
}
